<?php namespace Iesod\Database;

interface ModelInterface {
    public $Model;
    public static function insert($data,$returnInsertId = true);
    public static function update($data,$id = null);
    public function getTable();
    public function getPrimaryKey($setField = true);
    public function getId();
    public function getConnectionId();
    public function isTable();
    public function getFieldsFromTable();
    public function getFields();
    static function beginTransaction();
    static function commit();
    static function rollBack();
    static function getFieldsNameValue();
    public function getField($fieldName);
    public function setField($fieldName,$params = []);
    public function validate(RequestInterface $request = null,$strMessage = null);
    static function Build($id = null);
    public function afterInsert($id = null, $data = []);
    public function beforeInsert(&$data = []);
    public function afterUpdate($id = null, $data = []);
    public function beforeUpdate($id = null, &$data = []);
    public function afterDelete($id = null);
    public function beforeDelete($id = null);
    static function select($columns = ['*']);
    static function Raw($value);
    static function joinLeft($table, $first, $operator , $secund);
    static function joinInner($table, $first, $operator , $secund);
    static function whereId($id);
    static function where($first, $operator , $secund);
    static function whereExpression($expression, $bindData = null);
    static function whereIsNull($field);
    static function whereIsNotNull($field);
    static function whereRaw($where);
    static function order($field, $order = "ASC");
    static function groupby($field);
    static function find($id,$fetch_style = null);
    static function first($fetch_style = null);
    static function get();
    public function afterInsert($id = null, $data = []);
    public function beforeInsert(&$data = []);
    public function afterUpdate($id = null, $data = []);
    public function beforeUpdate($id = null, &$data = []);
    public function afterDelete($id = null);
    public function beforeDelete($id = null);
    public static function insert($data,$returnInsertId = true);
    public static function update($data,$id = null);
}